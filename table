<TableContainer component={Paper} sx={{ maxHeight: '300px' }}>
          <Table aria-aria-label="simple table" stickyHeader>
            <TableHead>
              <TableRow>
                <TableCell>ID</TableCell>
                <TableCell>Name</TableCell>
                <TableCell>Birth Date</TableCell>
                <TableCell>Gender</TableCell>
                <TableCell>Resource Type</TableCell>
                <TableCell>Address</TableCell>
              </TableRow>
            </TableHead>
            {/* <TableBody sx={{ backgroundColor: '#efefef' }}>
              {patients?.map((patient) => (
                <TableRow
                  key={patient.id}
                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}
                >
                  <TableCell>{patient.id || 'null'}</TableCell>
                  <TableCell>{patient.name?.[0]?.given?.[0] || patient.name?.[0]?.text || 'null'} {patient.name?.[0]?.family || 'null'}</TableCell>
                  <TableCell>{patient.birthDate || 'null'}</TableCell>
                  <TableCell>{patient.gender || 'null'}</TableCell>
                  <TableCell>{patient.resourceType || 'null'}</TableCell>
                  <TableCell>{patient.address?.[0]?.text || 'null'}</TableCell>
                </TableRow>
              ))}
            </TableBody> */}
            <TableBody sx={{ backgroundColor: '#efefef' }}>
              {patient?.map((patient) => (
                <TableRow
                  key={patient.id}
                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}
                >
                  <TableCell>{patient.id || 'null'}</TableCell>
                  <TableCell>{patient.name?.[0]?.given?.[0] || patient.name?.[0]?.text || 'null'} {patient.name?.[0]?.family || 'null'}</TableCell>
                  <TableCell>{patient.birthDate || 'null'}</TableCell>
                  <TableCell>{patient.gender || 'null'}</TableCell>
                  <TableCell>{patient.resourceType || 'null'}</TableCell>
                  <TableCell>{patient.address?.[0]?.text || 'null'}</TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </TableContainer>


        <Modal
                open={open}
                onClose={handleClose}
            >
                <Container maxWidth="md" sx={{ mt: 10, p: 3, bgcolor: 'white', borderRadius: 4 }}>
                    <Typography variant="h6" gutterBottom color={'secondary'} mb={3}>
                        Update Patient
                    </Typography>
                    <Box component="form" noValidate sx={{ display: 'flex', flexDirection: 'column' }}>
                        <TextField
                            label="Given Name"
                            variant="outlined"
                            value={givenName}
                            error={!givenName}
                            helperText={!givenName ? '*Required' : ''}
                            onChange={(e) => setGivenName(e.target.value)}
                            sx={{ mb: 3 }}
                        />
                        <TextField
                            label="Family Name"
                            variant="outlined"
                            value={familyName}
                            onChange={(e) => setFamilyName(e.target.value)}
                            sx={{ mb: 2 }}
                        />
                        <TextField
                            label="Birth Date"
                            variant="outlined"
                            value={birthDate}
                            onChange={(e) => setbirthDate(e.target.value)}
                            sx={{ mb: 2 }}
                        />
                        {/* <TextField
                            label="Gender"
                            variant="outlined"
                            value={gender}
                            onChange={(e) => setGender(e.target.value)}
                            sx={{ mb: 2 }}
                        /> */}
                        <TextField
                            label="Contact"
                            variant="outlined"
                            value={contact}
                            onChange={(e) => setContact(e.target.value)}
                            sx={{ mb: 2 }}
                        />
                        <TextField
                            label="Address"
                            variant="outlined"
                            value={address}
                            onChange={(e) => setAddress(e.target.value)}
                            sx={{ mb: 2 }}
                        />
                        <FormControl>
                            <FormLabel>Gender</FormLabel>
                            <RadioGroup row
                                name='gender'
                                value={gender}
                                sx={{ mb: 2 }}
                                onChange={(e) => setGender(e.target.value)}>
                                <FormControlLabel value="male" control={<Radio />} label="Male" />
                                <FormControlLabel value="female" control={<Radio />} label="Female" />
                            </RadioGroup>
                        </FormControl>
                        <Button variant="contained" color="secondary" onClick={handleSave}>
                            Save
                        </Button>
                    </Box>
                </Container>
            </Modal>





            //add patient modalÄ±
            <Modal
                open={open}
                onClose={handleClose}
                aria-labelledby="modal-modal-title"
                aria-describedby="modal-modal-description"
            >
                <Box sx={style}>
                    <Typography variant='h4' textAlign={'center'} color={'secondary'} pb={'20px'}>Add Patient Form</Typography>
                    <form>
                        <Grid container>
                            <Grid item xs={8}>
                                <TextField
                                    variant='outlined'
                                    label="Given Name"
                                    name='given'
                                    value={values.given}
                                    onChange={handleInputChange}
                                    error={!values.given}
                                    helperText={!values.given ? '*Required' : ''}
                                    sx={{ margin: '10px' }}
                                />
                                <TextField
                                    variant='outlined'
                                    label="Family Name"
                                    name='family'
                                    value={values.family}
                                    onChange={handleInputChange}
                                    error={!values.family}
                                    helperText={!values.family ? '*Required' : ''}
                                    sx={{ margin: '10px' }}
                                />
                                <TextField
                                    variant='outlined'
                                    label="Telecom"
                                    name='telecom'
                                    value={values.telecom}
                                    onChange={handleInputChange}
                                    error={!values.telecom}
                                    helperText={!values.telecom ? '*Required' : ''}
                                    sx={{ margin: '10px' }}
                                />
                                <TextField
                                    variant='outlined'
                                    label="Address"
                                    name='address'
                                    value={values.address}
                                    onChange={handleInputChange}
                                    error={!values.address}
                                    helperText={!values.address ? '*Required' : ''}
                                    sx={{ margin: '10px' }}
                                />
                            </Grid>
                            <Grid item xs={4}>
                                {/* <DatePicker
                                        name='birthDate'
                                        format='YYYY-MM-DD'
                                        label="Birth Date"
                                        value={values.birthDate}
                                        onChange={date => handleInputChange(convertToDefEventPara('birthDate', date))}
                                        sx={{ margin: '10px' }}
                                    /> */}
                                <TextField
                                    variant='outlined'
                                    label="Birth Date (YYYY-MM-DD)"
                                    name='birthDate'
                                    value={values.birthDate}
                                    onChange={handleInputChange}
                                    error={!values.birthDate}
                                    helperText={!values.birthDate ? '*Required' : ''}
                                    sx={{ margin: '10px' }}
                                />
                                <FormControl sx={{ margin: '10px' }}>
                                    <FormLabel>Gender</FormLabel>
                                    <RadioGroup row
                                        name='gender'
                                        value={values.gender}
                                        onChange={handleInputChange}>
                                        <FormControlLabel value="male" control={<Radio />} label="Male" />
                                        <FormControlLabel value="female" control={<Radio />} label="Female" />
                                    </RadioGroup>
                                </FormControl>
                            </Grid>
                            <Button
                                variant='contained'
                                color='secondary'
                                size="large"
                                sx={{ margin: '10px', marginLeft: '50%' }}
                                onClick={handleSave}>
                                Save
                            </Button>
                        </Grid>
                    </form>
                </Box>
            </Modal>